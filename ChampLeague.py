# bigcon

# -*- coding: utf-8 -*-
"""BigCon1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nLyRHjcapJu19CEgPLTNwqjCmGph46QN
"""

!git clone https://github.com/HWANG-HOE-SUN/GitTest.git

from google.colab import drive
drive.mount('/gdrive')

import matplotlib
import matplotlib.pyplot as plt
import os
import numpy as np
import pandas as pd
# 한글출력
matplotlib.rc('font', family='NanumBarunGothic')
plt.rcParams['axes.unicode_minus'] = False

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

import io
sellData = pd.read_excel(uploaded['2019실적데이터.xlsx'],header=1)
watchData = pd.read_excel(uploaded['2019시청률데이터.xlsx'],header=1)

"""# **판매데이터 처리**"""

print(sellData.shape)
print(sellData.info())
sellData.head(10) # 노출(분) 같은거 귀찮아서 NaN으로 해둔게 많다. 엑셀에서 or 여기서 처리해야 할듯.

print(watchData.shape)
print(watchData.info())
watchData.head(5)

"""# 불필요 Data제거 및 결측치 처리

# 불필요 데이터(판매실적=0)
"""

sellData.columns

print(sellData[(sellData['상품군']=='무형')]) #937개가 무형제품.
sellData[(sellData['판매단가']==0)] #상품군 무형인 Data들은 모두 판매단가도 0임 이것들을 지우겠다.

Selling = sellData[sellData['판매단가']!=0]
Selling

from datetime import datetime,timedelta

"""# 결측치( 노출('분) )"""

testsell = Selling.copy() #testsell에서 노출(분) 채우는 실험을 해보겠음.
Time_NaN_Index = testsell[testsell['노출(분)'].isnull()].index # 노출(분)이 채워지지 않은놈들의 인덱스

#노출(분) 채우는규칙? (같은 마더코드의) 같은 시간대인 놈의 노출(분)으로 채우면 될 듯.
#근데 한 시간대에 여러 마더코드가 있지 않으니.. 그냥 같은 시간대에 방송된 다른 notnull 노출(분)값을 넣자.
groupmax = testsell["노출(분)"].groupby(testsell['방송일시']).max()

# groupmax.index는 방송일시가 들어있다.
# Time_NaN_BroadTime에도 방송일시가 들어있다
# Time_NaN_Index엔 노출(분) Null인 인덱스(주소)가 들어있다.
# groupmax엔 방송일시별로 노출(분)이 들어있다.

for i in Time_NaN_Index:
  testsell['노출(분)'][i] = groupmax[testsell['방송일시'][i]]
testsell[348:] # 성공적으로 결측치를 대체했다.

#Selling = testsell
#del(testsell)
Selling.head()

"""# **시청률데이터 처리**"""

# 실적에 대한 정의를 확실히 하고... 본질적으로 우리가 예측하는것이 어느시점에 발생하는 행위인지 정의해야 될듯.
# 시청률 집계방식-> 8시2분에 10%라면, 그 이전에 시청하던 시청자수를 집계해서 얻은 수치임(내가 아는바에 의하면)
# 실적이 발생하는 시점? 결제가 발생해서 실제로 수익이 난 시점! 시청률 발생시점, 집계시점, 실적시점이 다 서로 다를 수 있을거 같음.
# 근데 우리가 예측할건 분당 실적이다... 어떤 시점의 어느 행위를 예측하는가? 어떻게 실적을 분별로 예측할까.



"""# 상품군별 분리 및 분석

---


1.   주방
2.   가전
3.   의류
4.   속옷
5.   잡화
6.   농수축
7.   생활용품
8.   가구
9.   이미용
10.  건강기능
11.  침구
"""

Selling['상품군'].value_counts()

"""# 1.주방용품"""

Selling_Kitchen = Selling[Selling['상품군']=='주방']
Selling_Kitchen.head()



"""# 외부데이터 수입(강수량, 앱애니)"""







